<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<title></title>
<meta name="Generator" content="Cocoa HTML Writer">
<meta name="CocoaVersion" content="824.42">
<style type="text/css">
p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 13.0px Helvetica; color: #000000}
p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #000000; min-height: 12.0px}
p.p3 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000}
p.p4 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; color: #000000; min-height: 14.0px}
p.p5 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; min-height: 12.0px}
p.p6 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #bf0000}
p.p7 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco}
p.p8 {margin: 0.0px 0.0px 0.0px 0.0px; font: 9.0px Monaco; color: #0000bf}
span.s1 {font: 18.0px Helvetica}
span.s2 {font: 9.0px Monaco}
span.s3 {color: #0000bf}
span.s4 {color: #007300}
span.s5 {color: #000000}
span.Apple-tab-span {white-space:pre}
</style>
</head>
<body>
<p class="p1"><span class="s1"><b>IEnvGen</b></span><span class="s2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span><b>envelope generator for polling values from an InterplEnv</b></p>
<p class="p2"><br></p>
<p class="p3"><b>superclass: UGen</b></p>
<p class="p4"><b></b><br></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>*ar(ienvelope, index, mul, add)</b></p>
<p class="p3"><b><span class="Apple-tab-span">	</span>*kr(ienvelope, index, mul, add)</b></p>
<p class="p4"><br></p>
<p class="p3"><span class="Apple-tab-span">	</span>Plays back break point envelopes from the index point. The envelopes are instances of the InterplEnv <span class="Apple-tab-span">	</span>class. See the <b>InterplEnv</b> help file for more info.<span class="Apple-converted-space"> </span></p>
<p class="p2"><br></p>
<p class="p2"><span class="Apple-tab-span">	</span></p>
<p class="p3"><span class="s2"><span class="Apple-tab-span">	</span></span><b>ienvelope</b> <span class="Apple-tab-span">	</span>an instance of InterplEnv (this is static for the life of the UGen)</p>
<p class="p3"><span class="Apple-tab-span">	</span><b>index<span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></b>a point to access within the InterplEnv</p>
<p class="p4"><br></p>
<p class="p5"><br></p>
<p class="p6">// example</p>
<p class="p5"><br></p>
<p class="p7"><span class="s3">SynthDef</span>(<span class="s4">\test</span>, {<span class="s3">arg</span> gate = 1;</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="s3">var</span> env, sin;</p>
<p class="p7"><span class="Apple-tab-span">	</span>sin = <span class="s3">SinOsc</span>.ar(440, 0, 1);</p>
<p class="p7"><span class="Apple-tab-span">	</span>env = <span class="s3">InterplEnv</span>([0, 0.6, 0.3, 1.0, 0], [0.1, 0.02, 0.4, 1.1], [<span class="s4">\lin</span>, <span class="s4">\exp</span>, -6, <span class="s4">\sin</span>]).plot;<span class="Apple-tab-span">	</span><span class="s3">Out</span>.ar(0, sin *<span class="Apple-converted-space"> </span></p>
<p class="p6"><span class="s5"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>// use MouseX to index into the InterplEnv to control amps</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s3">IEnvGen</span>.kr(env, <span class="s3">MouseX</span>.kr(0, env.times.sum)) *</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span><span class="s3">EnvGen</span>.kr(<span class="s3">Env</span>.asr(0.01, 1, 0.01), gate, doneAction: 2);</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>)</p>
<p class="p7">}).load(s);</p>
<p class="p5"><br></p>
<p class="p7">s = <span class="s3">Server</span>.internal.boot;</p>
<p class="p7">s.scope;</p>
<p class="p5"><br></p>
<p class="p7">s.sendMsg(<span class="s4">\s_new</span>, <span class="s4">\test</span>, a = s.nextNodeID, 0, 1);</p>
<p class="p7">s.sendMsg(<span class="s4">\n_set</span>, a, <span class="s4">\gate</span>, 0);</p>
<p class="p5"><br></p>
<p class="p6">// index with an SinOsc ... mouse controls amplitude of SinOsc</p>
<p class="p8">SynthDef<span class="s5">(</span><span class="s4">\test</span><span class="s5">, {</span></p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="s3">var</span> env, sin;</p>
<p class="p7"><span class="Apple-tab-span">	</span>sin = <span class="s3">SinOsc</span>.ar(440, 0, <span class="s3">MouseX</span>.kr(0, 1));</p>
<p class="p6"><span class="s5"><span class="Apple-tab-span">	</span></span>// use offset so negative values of SinOsc will map into the InterplEnv</p>
<p class="p7"><span class="Apple-tab-span">	</span>env = <span class="s3">InterplEnv</span>([-1, -0.7, 0.7, 1], [ 0.8666, 0.2666, 0.8668 ], <span class="s4">\lin</span>, -1.0);</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="s3">Out</span>.ar(0, <span class="s3">IEnvGen</span>.ar(env, sin))<span class="Apple-converted-space"> </span></p>
<p class="p7">}).load(s);</p>
<p class="p5"><br></p>
<p class="p7">s.sendMsg(<span class="s4">\s_new</span>, <span class="s4">\test</span>, a = s.nextNodeID, 0, 1);</p>
<p class="p7">s.sendMsg(<span class="s4">\n_free</span>, a);</p>
<p class="p5"><br></p>
<p class="p5"><br></p>
<p class="p6">// index with Amplitude of input, control freq of SinOsc</p>
<p class="p7"><span class="s3">SynthDef</span>(<span class="s4">\test</span>, {<span class="s3">arg</span> inbus;</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="s3">var</span> env, point;</p>
<p class="p7"><span class="Apple-tab-span">	</span>point = <span class="s3">Amplitude</span>.ar(<span class="s3">In</span>.ar(inbus), 0.01, 0.2);</p>
<p class="p6"><span class="s5"><span class="Apple-tab-span">	</span></span>// use offset so negative values of SinOsc will map into the InterplEnv</p>
<p class="p7"><span class="Apple-tab-span">	</span>env = <span class="s3">InterplXYC</span>([[0, 330, <span class="s4">\exp</span>], [0.5, 440, <span class="s4">\exp</span>], [1.0, 1760]]);</p>
<p class="p7"><span class="Apple-tab-span">	</span><span class="s3">Out</span>.ar(1, <span class="s3">SinOsc</span>.ar(<span class="s3">IEnvGen</span>.kr(env, point), 0, 0.2))<span class="Apple-converted-space"> </span></p>
<p class="p7">}).load(s);</p>
<p class="p5"><br></p>
<p class="p7">s.sendMsg(<span class="s4">\s_new</span>, <span class="s4">\test</span>, a = s.nextNodeID, 0, 1, <span class="s4">\inbus</span>, s.options.numOutputBusChannels);</p>
<p class="p7">s.sendMsg(<span class="s4">\n_free</span>, a);</p>
</body>
</html>
